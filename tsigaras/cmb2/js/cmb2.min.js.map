{"version":3,"sources":["cmb2/js/cmb2.js"],"names":["window","CMB2","document","$","cmb","$id","cmb2_l10","setTimeout","selector","getRowId","id","split","splice","length","push","$document","l10n","defaults","join","idNumber","noEmpty","repeatUpdate","styleBreakPoint","mediaHandlers","time_picker","date_picker","color_picker","code_editor","media","frames","init","extend","$metabox","metabox","$repeatGroup","find","strings","check_toggle","insertBefore","on","field","this","attr","val","addGroupRow","handleMedia","handleFileClick","handleRemoveMedia","emptyValue","removeGroupRow","removeAjaxRow","maybeOembed","resetTitlesAndIterator","toggleHandle","setDefaults","filter","each","before","up_arrow_class","down_arrow_class","shiftRows","data","resizeoEmbeds","hasOwnProperty","listenTagAdd","wp","subscribe","mceEnsureSave","trigger","tinyMCE","settings","editor","resetBoxes","select","isSavingPost","editors","i","$boxes","activeEditor","resetBox","save","$box","user_can_richedit","elType","$element","evt","xhr","indexOf","prop","tagName","group","click","remove","$table","$row","prevIterator","rowindex","resetGroupTitles","html","target","groupTitle","parent","toggleCheckBoxes","parseInt","preventDefault","$multicheck","$this","repeatEls","updateNameAttr","newIterator","$rowTitle","hasClass","handleFieldMedia","text","replace","$el","toggleClass","closest","_handleMedia","$field","fieldData","mediaid","handlers","attach_id","prev","previewSize","is","$td","uid","isList","title","states","attachmentHtml","templates","_","uniqueId","selection","fileGroup","siblings","previewsize","sizeName","sizename","fieldName","single","library","queryargs","button","attachment","multiple","first","set","isImage","prepareData","image","template","file","getImageData","stringRemoveImage","stringRemoveFile","remove_file","previewH","width","append","sizes","get","getAttachmentHtml","Math","height","templatesId","previewW","selectFile","call","toJSON","mediaFieldName","remove_image","stringFile","download","fallbackSize","fetch","attach","url","parents","large","floor","$other","$_this","pop","state","$elements","removeAttr","replaceWith","list","type","oldFor","$newInput","newVal","newID","oldID","openModal","newName","oldName","attrs","$cell","cleanRow","prevNum","checkable","defVal","oldVal","removeClass","newRowHousekeeping","$colorPicker","$list","$buttons","empty","afterRowInsert","initPickers","elReplacements","isFileList","row","$oldRow","replaceLast","nodeName","$newRow","makeRepeatableSortable","addAjaxRow","hasAttribute","$emptyrow","resetRow","resetting","number","$parent","name","from","to","addClass","$addNewBtn","getFieldArg","$removeBtn","$from","last","triggerElement","fromIterator","$goto","toIterator","after","documentElement","scrollTop","offset","top","$timePickers","$datePickers","$colorPickers","time","date","initDateTimePickers","confirmation","confirm","options","beforeShow","input","$picker","onClose","count","moveUp","wpColorPicker","fieldOpts","$selector","show","body","overrides","makeListSortable","$filelist","color","$repeatables","sortable","method","defaultKey","cancel","datePickerSetupOpts","existing","inst","keyup","dpDiv","year","month","picker","addTimePickerClasses","onChangeMonthYear","dateText","hide","isSmallest","func","isSmall","newWidth","$embeds","initColorPickers","$children","iheight","jQuery","_newWidth","farbtastic","focus","next","blur","oembed_url","$obj","initCodeEditors","$context","codeEditor","oembed_width","initialize","codeEditorArgs","props","args","ajax","dataType","cursor","disableSelection","items","focusout","spinner","betw","min","max","which","doAjax","paste","$tableWrap","isSide","tableW","evtName","round","hash","not","iwidth","filterCb","fields","newHeight","field_id","$embed_container","getField","$child_el","log","$embed_wrap","ajaxurl","action","object_id","object_type","cmb2_ajax_nonce","ajax_nonce","success","response","script_debug","m","Array","prototype","slice","arguments","arg","getFields","Error","e","message","console","apply","string","search","n","lastIndexOf"],"mappings":"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","file":"cmb2.min.js","sourcesContent":["/**\n * Controls the behaviours of custom metabox fields.\n *\n * @author CMB2 team\n * @see    https://github.com/CMB2/CMB2\n */\n\n/**\n * Custom jQuery for Custom Metaboxes and Fields\n */\nwindow.CMB2 = window.CMB2 || {};\n(function(window, document, $, cmb, undefined){\n\t'use strict';\n\n\t// localization strings\n\tvar l10n = window.cmb2_l10;\n\tvar setTimeout = window.setTimeout;\n\tvar $document;\n\tvar $id = function( selector ) {\n\t\treturn $( document.getElementById( selector ) );\n\t};\n\tvar getRowId = function( id, newIterator ) {\n\t\tid = id.split('-');\n\t\tid.splice(id.length - 1, 1);\n\t\tid.push( newIterator );\n\t\treturn id.join('-');\n\t};\n\tcmb.$id = $id;\n\tvar defaults = {\n\t\tidNumber        : false,\n\t\trepeatEls       : 'input:not([type=\"button\"]),select,textarea,.cmb2-media-status',\n\t\tnoEmpty         : 'input:not([type=\"button\"]):not([type=\"radio\"]):not([type=\"checkbox\"]),textarea',\n\t\trepeatUpdate    : 'input:not([type=\"button\"]),select,textarea,label',\n\t\tstyleBreakPoint : 450,\n\t\tmediaHandlers   : {},\n\t\tdefaults : {\n\t\t\ttime_picker  : l10n.defaults.time_picker,\n\t\t\tdate_picker  : l10n.defaults.date_picker,\n\t\t\tcolor_picker : l10n.defaults.color_picker || {},\n\t\t\tcode_editor  : l10n.defaults.code_editor,\n\t\t},\n\t\tmedia : {\n\t\t\tframes : {},\n\t\t},\n\t};\n\n\tcmb.init = function() {\n\t\t$document = $( document );\n\n\t\t// Setup the CMB2 object defaults.\n\t\t$.extend( cmb, defaults );\n\n\t\tcmb.trigger( 'cmb_pre_init' );\n\n\t\tvar $metabox     = cmb.metabox();\n\t\tvar $repeatGroup = $metabox.find('.cmb-repeatable-group');\n\n\t\t // Init time/date/color pickers\n\t\tcmb.initPickers( $metabox.find('input[type=\"text\"].cmb2-timepicker'), $metabox.find('input[type=\"text\"].cmb2-datepicker'), $metabox.find('input[type=\"text\"].cmb2-colorpicker') );\n\n\t\t// Init code editors.\n\t\tcmb.initCodeEditors( $metabox.find( '.cmb2-textarea-code:not(.disable-codemirror)' ) );\n\n\t\t// Insert toggle button into DOM wherever there is multicheck. credit: Genesis Framework\n\t\t$( '<p><span class=\"button-secondary cmb-multicheck-toggle\">' + l10n.strings.check_toggle + '</span></p>' ).insertBefore( '.cmb2-checkbox-list:not(.no-select-all)' );\n\n\t\t// Make File List drag/drop sortable:\n\t\tcmb.makeListSortable();\n\t\t// Make Repeatable fields drag/drop sortable:\n\t\tcmb.makeRepeatableSortable();\n\n\t\t$metabox\n\t\t\t.on( 'change', '.cmb2_upload_file', function() {\n\t\t\t\tcmb.media.field = $( this ).attr( 'id' );\n\t\t\t\t$id( cmb.media.field + '_id' ).val('');\n\t\t\t})\n\t\t\t// Media/file management\n\t\t\t.on( 'click', '.cmb-multicheck-toggle', cmb.toggleCheckBoxes )\n\t\t\t.on( 'click', '.cmb2-upload-button', cmb.handleMedia )\n\t\t\t.on( 'click', '.cmb-attach-list li, .cmb2-media-status .img-status img, .cmb2-media-status .file-status > span', cmb.handleFileClick )\n\t\t\t.on( 'click', '.cmb2-remove-file-button', cmb.handleRemoveMedia )\n\t\t\t// Repeatable content\n\t\t\t.on( 'click', '.cmb-add-group-row', cmb.addGroupRow )\n\t\t\t.on( 'click', '.cmb-add-row-button', cmb.addAjaxRow )\n\t\t\t.on( 'click', '.cmb-remove-group-row', cmb.removeGroupRow )\n\t\t\t.on( 'click', '.cmb-remove-row-button', cmb.removeAjaxRow )\n\t\t\t// Ajax oEmbed display\n\t\t\t.on( 'keyup paste focusout', '.cmb2-oembed', cmb.maybeOembed )\n\t\t\t// Reset titles when removing a row\n\t\t\t.on( 'cmb2_remove_row', '.cmb-repeatable-group', cmb.resetTitlesAndIterator )\n\t\t\t.on( 'click', '.cmbhandle, .cmbhandle + .cmbhandle-title', cmb.toggleHandle );\n\n\t\tif ( $repeatGroup.length ) {\n\t\t\t$repeatGroup\n\t\t\t\t.on( 'cmb2_add_row', cmb.emptyValue )\n\t\t\t\t.on( 'cmb2_add_row', cmb.setDefaults )\n\t\t\t\t.filter('.sortable').each( function() {\n\t\t\t\t\t// Add sorting arrows\n\t\t\t\t\t$( this ).find( '.cmb-remove-group-row-button' ).before( '<a class=\"button-secondary cmb-shift-rows move-up alignleft\" href=\"#\"><span class=\"'+ l10n.up_arrow_class +'\"></span></a> <a class=\"button-secondary cmb-shift-rows move-down alignleft\" href=\"#\"><span class=\"'+ l10n.down_arrow_class +'\"></span></a>' );\n\t\t\t\t})\n\t\t\t\t.on( 'click', '.cmb-shift-rows', cmb.shiftRows );\n\t\t}\n\n\t\t// on pageload\n\t\tsetTimeout( cmb.resizeoEmbeds, 500);\n\t\t// and on window resize\n\t\t$( window ).on( 'resize', cmb.resizeoEmbeds );\n\n\t\tif ( $id( 'addtag' ).length ) {\n\t\t\tcmb.listenTagAdd();\n\t\t}\n\n\t\t$( document ).on( 'cmb_init', cmb.mceEnsureSave );\n\n\t\tcmb.trigger( 'cmb_init' );\n\t};\n\n\t// Handles updating tiny mce instances when saving a gutenberg post.\n\t// https://github.com/CMB2/CMB2/issues/1156\n\tcmb.mceEnsureSave = function() {\n\t\t// If no wp.data, do not proceed (no gutenberg)\n\t\tif ( ! wp.data || ! wp.data.hasOwnProperty('subscribe') ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// If the current user cannot richedit, or MCE is not available, bail.\n\t\tif ( ! cmb.canTinyMCE() ) {\n\t\t\treturn;\n\t\t}\n\n\t\twp.data.subscribe( function() {\n\t\t\tvar editor = wp.data.hasOwnProperty('select') ? wp.data.select( 'core/editor' ) : null;\n\n\t\t\t// the post is currently being saved && we have tinymce editors\n\t\t\tif ( editor && editor.isSavingPost && editor.isSavingPost() && window.tinyMCE.editors.length ) {\n\t\t\t\tfor ( var i = 0; i < window.tinyMCE.editors.length; i++ ) {\n\t\t\t\t\tif ( window.tinyMCE.activeEditor !== window.tinyMCE.editors[i] ) {\n\t\t\t\t\t\twindow.tinyMCE.editors[i].save();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t};\n\n\tcmb.canTinyMCE = function() {\n\t\treturn l10n.user_can_richedit && window.tinyMCE;\n\t};\n\n\tcmb.listenTagAdd = function() {\n\t\t$document.ajaxSuccess( function( evt, xhr, settings ) {\n\t\t\tif ( settings.data && settings.data.length && -1 !== settings.data.indexOf( 'action=add-tag' ) ) {\n\t\t\t\tcmb.resetBoxes( $id( 'addtag' ).find( '.cmb2-wrap > .cmb2-metabox' ) );\n\t\t\t}\n\t\t});\n\t};\n\n\tcmb.resetBoxes = function( $boxes ) {\n\t\t$.each( $boxes, function() {\n\t\t\tcmb.resetBox( $( this ) );\n\t\t});\n\t};\n\n\tcmb.resetBox = function( $box ) {\n\t\t$box.find( '.wp-picker-clear' ).trigger( 'click' );\n\t\t$box.find( '.cmb2-remove-file-button' ).trigger( 'click' );\n\t\t$box.find( '.cmb-row.cmb-repeatable-grouping:not(:first-of-type) .cmb-remove-group-row' ).click();\n\t\t$box.find( '.cmb-repeat-row:not(:first-child)' ).remove();\n\n\t\t$box.find( 'input:not([type=\"button\"]),select,textarea' ).each( function() {\n\t\t\tvar $element = $( this );\n\t\t\tvar tagName = $element.prop('tagName');\n\n\t\t\tif ( 'INPUT' === tagName ) {\n\t\t\t\tvar elType = $element.attr( 'type' );\n\t\t\t\tif ( 'checkbox' === elType || 'radio' === elType ) {\n\t\t\t\t\t$element.prop( 'checked', false );\n\t\t\t\t} else {\n\t\t\t\t\t$element.val( '' );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( 'SELECT' === tagName ) {\n\t\t\t\t$( 'option:selected', this ).prop( 'selected', false );\n\t\t\t}\n\t\t\tif ( 'TEXTAREA' === tagName ) {\n\t\t\t\t$element.html( '' );\n\t\t\t}\n\t\t});\n\t};\n\n\tcmb.resetTitlesAndIterator = function( evt ) {\n\t\tif ( ! evt.group ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $table = $( evt.target );\n\t\tvar groupTitle = $table.find( '.cmb-add-group-row' ).data( 'grouptitle' );\n\n\t\t// Loop repeatable group table rows\n\t\t$table.find( '.cmb-repeatable-grouping' ).each( function( rowindex ) {\n\t\t\tvar $row = $( this );\n\t\t\tvar prevIterator = parseInt( $row.data( 'iterator' ), 10 );\n\t\t\tif ( prevIterator === rowindex ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Reset rows iterator\n\t\t\t$row\n\t\t\t\t.attr( 'data-iterator', rowindex )\n\t\t\t\t.data( 'iterator', rowindex )\n\t\t\t\t.attr('id', getRowId( $row.attr('id'), rowindex ) )\n\t\t\t\t.find( cmb.repeatEls ).each( function() {\n\t\t\t\t\tcmb.updateNameAttr( $( this ), prevIterator, rowindex );\n\t\t\t\t});\n\n\t\t\tcmb.resetGroupTitles( $row, rowindex, groupTitle );\n\t\t});\n\t};\n\n\tcmb.resetGroupTitles = function( $row, newIterator, groupTitle ) {\n\t\tif ( groupTitle ) {\n\t\t\tvar $rowTitle = $row.find( 'h3.cmb-group-title' );\n\n\t\t\t// Reset rows title\n\t\t\tif ( $rowTitle.length ) {\n\t\t\t\t$rowTitle.text( groupTitle.replace( '{#}', parseInt( newIterator, 10 ) + 1 ) );\n\t\t\t}\n\t\t}\n\t};\n\n\tcmb.toggleHandle = function( evt ) {\n\t\tevt.preventDefault();\n\t\tcmb.trigger( 'postbox-toggled', $( this ).parent('.postbox').toggleClass('closed') );\n\t};\n\n\tcmb.toggleCheckBoxes = function( evt ) {\n\t\tevt.preventDefault();\n\t\tvar $this = $( this );\n\t\tvar $multicheck = $this.closest( '.cmb-td' ).find( 'input[type=checkbox]:not([disabled])' );\n\n\t\t// If the button has already been clicked once...\n\t\tif ( $this.data( 'checked' ) ) {\n\t\t\t// clear the checkboxes and remove the flag\n\t\t\t$multicheck.prop( 'checked', false );\n\t\t\t$this.data( 'checked', false );\n\t\t}\n\t\t// Otherwise mark the checkboxes and add a flag\n\t\telse {\n\t\t\t$multicheck.prop( 'checked', true );\n\t\t\t$this.data( 'checked', true );\n\t\t}\n\t};\n\n\tcmb.handleMedia = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $el = $( this );\n\t\tcmb.attach_id = ! $el.hasClass( 'cmb2-upload-list' ) ? $el.closest( '.cmb-td' ).find( '.cmb2-upload-file-id' ).val() : false;\n\t\t// Clean up default 0 value\n\t\tcmb.attach_id = '0' !== cmb.attach_id ? cmb.attach_id : false;\n\n\t\tcmb.handleFieldMedia( $el.prev('input.cmb2-upload-file'), $el.hasClass( 'cmb2-upload-list' ) );\n\t};\n\n\tcmb.handleFileClick = function( evt ) {\n\t\tif ( $( evt.target ).is( 'a' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tevt.preventDefault();\n\n\t\tvar $el    = $( this );\n\t\tvar $td    = $el.closest( '.cmb-td' );\n\t\tvar isList = $td.find( '.cmb2-upload-button' ).hasClass( 'cmb2-upload-list' );\n\t\tcmb.attach_id = isList ? $el.find( 'input[type=\"hidden\"]' ).data( 'id' ) : $td.find( '.cmb2-upload-file-id' ).val();\n\n\t\tif ( cmb.attach_id ) {\n\t\t\tcmb.handleFieldMedia( $td.find( 'input.cmb2-upload-file' ), isList );\n\t\t}\n\t};\n\n\t// Leaving this in for back-compat...\n\tcmb._handleMedia = function( id, isList ) {\n\t\treturn cmb.handleFieldMedia( $id( id ), isList );\n\t};\n\n\tcmb.handleFieldMedia = function( $field, isList ) {\n\t\tif ( ! wp ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar id  = $field.attr('id');\n\t\tvar fieldData = $field.data();\n\t\tvar media, handlers;\n\n\t\t// Get/set unique id since actual id cold _not_ be unique due to bad replacements, etc...\n\t\tvar uid = fieldData.mediaid;\n\t\tif ( ! uid ) {\n\t\t\tuid = _.uniqueId();\n\t\t\t$field.attr('data-mediaid', uid).data('mediaid', uid);\n\t\t\tfieldData.mediaid = uid;\n\t\t}\n\n\t\thandlers          = cmb.mediaHandlers;\n\t\tmedia             = cmb.media;\n\t\tmedia.mediaid     = uid;\n\t\tmedia.field       = id;\n\t\tmedia.$field      = $field;\n\t\tmedia.fieldData   = fieldData;\n\t\tmedia.previewSize = media.fieldData.previewsize;\n\t\tmedia.sizeName    = media.fieldData.sizename;\n\t\tmedia.fieldName   = $field.attr('name');\n\t\tmedia.isList      = isList;\n\n\t\t// If this field's media frame already exists, reopen it.\n\t\tif ( uid in media.frames ) {\n\t\t\treturn media.frames[ uid ].open();\n\t\t}\n\n\t\t// Create the media frame.\n\t\tmedia.frames[ uid ] = wp.media( {\n\t\t\ttitle: cmb.metabox().find('label[for=\"' + id + '\"]').text(),\n\t\t\tlibrary : media.fieldData.queryargs || {},\n\t\t\tbutton: {\n\t\t\t\ttext: l10n.strings[ isList ? 'upload_files' : 'upload_file' ]\n\t\t\t},\n\t\t\tmultiple: isList ? 'add' : false\n\t\t} );\n\n\t\t// Enable the additional media filters: https://github.com/CMB2/CMB2/issues/873\n\t\tmedia.frames[ uid ].states.first().set( 'filterable', 'all' );\n\n\t\tcmb.trigger( 'cmb_media_modal_init', media );\n\n\t\thandlers.list = function( selection, returnIt ) {\n\n\t\t\t// Setup our fileGroup array\n\t\t\tvar fileGroup = [];\n\t\t\tvar attachmentHtml;\n\n\t\t\tif ( ! handlers.list.templates ) {\n\t\t\t\thandlers.list.templates = {\n\t\t\t\t\timage : wp.template( 'cmb2-list-image' ),\n\t\t\t\t\tfile  : wp.template( 'cmb2-list-file' ),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Loop through each attachment\n\t\t\tselection.each( function( attachment ) {\n\n\t\t\t\t// Image preview or standard generic output if it's not an image.\n\t\t\t\tattachmentHtml = handlers.getAttachmentHtml( attachment, 'list' );\n\n\t\t\t\t// Add our file to our fileGroup array\n\t\t\t\tfileGroup.push( attachmentHtml );\n\t\t\t});\n\n\t\t\tif ( ! returnIt ) {\n\t\t\t\t// Append each item from our fileGroup array to .cmb2-media-status\n\t\t\t\tmedia.$field.siblings( '.cmb2-media-status' ).append( fileGroup );\n\t\t\t} else {\n\t\t\t\treturn fileGroup;\n\t\t\t}\n\n\t\t};\n\n\t\thandlers.single = function( selection ) {\n\t\t\tif ( ! handlers.single.templates ) {\n\t\t\t\thandlers.single.templates = {\n\t\t\t\t\timage : wp.template( 'cmb2-single-image' ),\n\t\t\t\t\tfile  : wp.template( 'cmb2-single-file' ),\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t// Only get one file from the uploader\n\t\t\tvar attachment = selection.first();\n\n\t\t\tmedia.$field.val( attachment.get( 'url' ) );\n\t\t\tmedia.$field.closest( '.cmb-td' ).find('.cmb2-upload-file-id')\n\t\t\t\t.val( attachment.get( 'id' ) );\n\n\t\t\t// Image preview or standard generic output if it's not an image.\n\t\t\tvar attachmentHtml = handlers.getAttachmentHtml( attachment, 'single' );\n\n\t\t\t// add/display our output\n\t\t\tmedia.$field.siblings( '.cmb2-media-status' ).slideDown().html( attachmentHtml );\n\t\t};\n\n\t\thandlers.getAttachmentHtml = function( attachment, templatesId ) {\n\t\t\tvar isImage = 'image' === attachment.get( 'type' );\n\t\t\tvar data    = handlers.prepareData( attachment, isImage );\n\n\t\t\t// Image preview or standard generic output if it's not an image.\n\t\t\treturn handlers[ templatesId ].templates[ isImage ? 'image' : 'file' ]( data );\n\t\t};\n\n\t\thandlers.prepareData = function( data, image ) {\n\t\t\tif ( image ) {\n\t\t\t\t// Set the correct image size data\n\t\t\t\thandlers.getImageData.call( data, 50 );\n\t\t\t}\n\n\t\t\tdata                   = data.toJSON();\n\t\t\tdata.mediaField        = media.field;\n\t\t\tdata.mediaFieldName    = media.fieldName;\n\t\t\tdata.stringRemoveImage = l10n.strings.remove_image;\n\t\t\tdata.stringFile        = l10n.strings.file;\n\t\t\tdata.stringDownload    = l10n.strings.download;\n\t\t\tdata.stringRemoveFile  = l10n.strings.remove_file;\n\n\t\t\treturn data;\n\t\t};\n\n\t\thandlers.getImageData = function( fallbackSize ) {\n\n\t\t\t// Preview size dimensions\n\t\t\tvar previewW = media.previewSize[0] || fallbackSize;\n\t\t\tvar previewH = media.previewSize[1] || fallbackSize;\n\n\t\t\t// Image dimensions and url\n\t\t\tvar url    = this.get( 'url' );\n\t\t\tvar width  = this.get( 'width' );\n\t\t\tvar height = this.get( 'height' );\n\t\t\tvar sizes  = this.get( 'sizes' );\n\n\t\t\t// Get the correct dimensions and url if a named size is set and exists\n\t\t\t// fallback to the 'large' size\n\t\t\tif ( sizes ) {\n\t\t\t\tif ( sizes[ media.sizeName ] ) {\n\t\t\t\t\turl    = sizes[ media.sizeName ].url;\n\t\t\t\t\twidth  = sizes[ media.sizeName ].width;\n\t\t\t\t\theight = sizes[ media.sizeName ].height;\n\t\t\t\t} else if ( sizes.large ) {\n\t\t\t\t\turl    = sizes.large.url;\n\t\t\t\t\twidth  = sizes.large.width;\n\t\t\t\t\theight = sizes.large.height;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fit the image in to the preview size, keeping the correct aspect ratio\n\t\t\tif ( width > previewW ) {\n\t\t\t\theight = Math.floor( previewW * height / width );\n\t\t\t\twidth = previewW;\n\t\t\t}\n\n\t\t\tif ( height > previewH ) {\n\t\t\t\twidth = Math.floor( previewH * width / height );\n\t\t\t\theight = previewH;\n\t\t\t}\n\n\t\t\tif ( ! width ) {\n\t\t\t\twidth = previewW;\n\t\t\t}\n\n\t\t\tif ( ! height ) {\n\t\t\t\theight = 'svg' === this.get( 'filename' ).split( '.' ).pop() ? '100%' : previewH;\n\t\t\t}\n\n\t\t\tthis.set( 'sizeUrl', url );\n\t\t\tthis.set( 'sizeWidth', width );\n\t\t\tthis.set( 'sizeHeight', height );\n\n\t\t\treturn this;\n\t\t};\n\n\t\thandlers.selectFile = function() {\n\t\t\tvar selection = media.frames[ uid ].state().get( 'selection' );\n\t\t\tvar type = isList ? 'list' : 'single';\n\n\t\t\tif ( cmb.attach_id && isList ) {\n\t\t\t\t$( '[data-id=\"'+ cmb.attach_id +'\"]' ).parents( 'li' ).replaceWith( handlers.list( selection, true ) );\n\t\t\t} else {\n\t\t\t\thandlers[type]( selection );\n\t\t\t}\n\n\t\t\tcmb.trigger( 'cmb_media_modal_select', selection, media );\n\t\t};\n\n\t\thandlers.openModal = function() {\n\t\t\tvar selection = media.frames[ uid ].state().get( 'selection' );\n\t\t\tvar attach;\n\n\t\t\tif ( ! cmb.attach_id ) {\n\t\t\t\tselection.reset();\n\t\t\t} else {\n\t\t\t\tattach = wp.media.attachment( cmb.attach_id );\n\t\t\t\tattach.fetch();\n\t\t\t\tselection.set( attach ? [ attach ] : [] );\n\t\t\t}\n\n\t\t\tcmb.trigger( 'cmb_media_modal_open', selection, media );\n\t\t};\n\n\t\t// When a file is selected, run a callback.\n\t\tmedia.frames[ uid ]\n\t\t\t.on( 'select', handlers.selectFile )\n\t\t\t.on( 'open', handlers.openModal );\n\n\t\t// Finally, open the modal\n\t\tmedia.frames[ uid ].open();\n\t};\n\n\tcmb.handleRemoveMedia = function( evt ) {\n\t\tevt.preventDefault();\n\t\tvar $this = $( this );\n\t\tif ( $this.is( '.cmb-attach-list .cmb2-remove-file-button' ) ) {\n\t\t\t$this.parents( '.cmb2-media-item' ).remove();\n\t\t\treturn false;\n\t\t}\n\n\t\tvar $cell        = $this.closest( '.cmb-td' );\n\t\tcmb.media.$field = $cell.find('.cmb2-upload-file');\n\t\tcmb.media.field  = cmb.media.$field.attr('id');\n\n\t\tcmb.media.$field.val('');\n\t\t$cell.find('.cmb2-upload-file-id').val('');\n\t\t$this.parents('.cmb2-media-status').html('');\n\n\t\treturn false;\n\t};\n\n\tcmb.cleanRow = function( $row, prevNum, group ) {\n\t\tvar $elements = $row.find( cmb.repeatUpdate );\n\t\tif ( group ) {\n\n\t\t\tvar $other = $row.find( '[id]' ).not( cmb.repeatUpdate );\n\n\t\t\t// Remove extra ajaxed rows\n\t\t\t$row.find('.cmb-repeat-table .cmb-repeat-row:not(:first-child)').remove();\n\n\t\t\t// Update all elements w/ an ID\n\t\t\tif ( $other.length ) {\n\t\t\t\t$other.each( function() {\n\t\t\t\t\tvar $_this = $( this );\n\t\t\t\t\tvar oldID = $_this.attr( 'id' );\n\t\t\t\t\tvar newID = oldID.replace( '_'+ prevNum, '_'+ cmb.idNumber );\n\t\t\t\t\tvar $buttons = $row.find('[data-selector=\"'+ oldID +'\"]');\n\t\t\t\t\t$_this.attr( 'id', newID );\n\n\t\t\t\t\t// Replace data-selector vars\n\t\t\t\t\tif ( $buttons.length ) {\n\t\t\t\t\t\t$buttons.attr( 'data-selector', newID ).data( 'selector', newID );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t$elements.filter( ':checked' ).removeAttr( 'checked' );\n\t\t$elements.find( ':checked' ).removeAttr( 'checked' );\n\t\t$elements.filter( ':selected' ).removeAttr( 'selected' );\n\t\t$elements.find( ':selected' ).removeAttr( 'selected', false );\n\n\t\tcmb.resetGroupTitles( $row, cmb.idNumber, $row.data( 'title' ) );\n\n\t\t$elements.each( function() {\n\t\t\tcmb.elReplacements( $( this ), prevNum, group );\n\t\t} );\n\n\t\treturn cmb;\n\t};\n\n\tcmb.elReplacements = function( $newInput, prevNum, group ) {\n\t\tvar oldFor    = $newInput.attr( 'for' );\n\t\tvar oldVal    = $newInput.val();\n\t\tvar type      = $newInput.prop( 'type' );\n\t\tvar defVal    = cmb.getFieldArg( $newInput, 'default' );\n\t\tvar newVal    = 'undefined' !== typeof defVal && false !== defVal ? defVal : '';\n\t\tvar tagName   = $newInput.prop('tagName');\n\t\tvar checkable = 'radio' === type || 'checkbox' === type ? oldVal : false;\n\t\tvar attrs     = {};\n\t\tvar newID, oldID;\n\t\tif ( oldFor ) {\n\t\t\tattrs = { 'for' : oldFor.replace( '_'+ prevNum, '_'+ cmb.idNumber ) };\n\t\t} else {\n\t\t\tvar oldName = $newInput.attr( 'name' );\n\t\t\tvar newName;\n\t\t\toldID = $newInput.attr( 'id' );\n\n\t\t\t// Handle adding groups vs rows.\n\t\t\tif ( group ) {\n\t\t\t\t// Expect another bracket after group's index closing bracket.\n\t\t\t\tnewName = oldName ? oldName.replace( '['+ prevNum +'][', '['+ cmb.idNumber +'][' ) : '';\n\t\t\t\t// Expect another underscore after group's index trailing underscore.\n\t\t\t\tnewID   = oldID ? oldID.replace( '_' + prevNum + '_', '_' + cmb.idNumber + '_' ) : '';\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Row indexes are at the very end of the string.\n\t\t\t\tnewName = oldName ? cmb.replaceLast( oldName, '[' + prevNum + ']', '[' + cmb.idNumber + ']' ) : '';\n\t\t\t\tnewID   = oldID ? cmb.replaceLast( oldID, '_' + prevNum, '_' + cmb.idNumber ) : '';\n\t\t\t}\n\n\t\t\tattrs = {\n\t\t\t\tid: newID,\n\t\t\t\tname: newName\n\t\t\t};\n\n\t\t}\n\n\t\t// Clear out textarea values\n\t\tif ( 'TEXTAREA' === tagName ) {\n\t\t\t$newInput.html( newVal );\n\t\t}\n\n\t\tif ( 'SELECT' === tagName && 'undefined' !== typeof defVal ) {\n\t\t\tvar $toSelect = $newInput.find( '[value=\"'+ defVal + '\"]' );\n\t\t\tif ( $toSelect.length ) {\n\t\t\t\t$toSelect.attr( 'selected', 'selected' ).prop( 'selected', 'selected' );\n\t\t\t}\n\t\t}\n\n\t\tif ( checkable ) {\n\t\t\t$newInput.removeAttr( 'checked' );\n\t\t\tif ( 'undefined' !== typeof defVal && oldVal === defVal ) {\n\t\t\t\t$newInput.attr( 'checked', 'checked' ).prop( 'checked', 'checked' );\n\t\t\t}\n\t\t}\n\n\t\tif ( ! group && $newInput[0].hasAttribute( 'data-iterator' ) ) {\n\t\t\tattrs['data-iterator'] = cmb.idNumber;\n\t\t}\n\n\t\t$newInput\n\t\t\t.removeClass( 'hasDatepicker' )\n\t\t\t.val( checkable ? checkable : newVal ).attr( attrs );\n\n\t\treturn $newInput;\n\t};\n\n\tcmb.newRowHousekeeping = function( $row ) {\n\t\tvar $colorPicker = $row.find( '.wp-picker-container' );\n\t\tvar $list        = $row.find( '.cmb2-media-status' );\n\n\t\tif ( $colorPicker.length ) {\n\t\t\t// Need to clean-up colorpicker before appending\n\t\t\t$colorPicker.each( function() {\n\t\t\t\tvar $td = $( this ).parent();\n\t\t\t\t$td.html( $td.find( 'input[type=\"text\"].cmb2-colorpicker' ).attr('style', '') );\n\t\t\t});\n\t\t}\n\n\t\t// Need to clean-up colorpicker before appending\n\t\tif ( $list.length ) {\n\t\t\t$list.empty();\n\t\t}\n\n\t\treturn cmb;\n\t};\n\n\tcmb.afterRowInsert = function( $row ) {\n\t\t// Init pickers from new row\n\t\tcmb.initPickers( $row.find('input[type=\"text\"].cmb2-timepicker'), $row.find('input[type=\"text\"].cmb2-datepicker'), $row.find('input[type=\"text\"].cmb2-colorpicker') );\n\t};\n\n\tcmb.updateNameAttr = function ( $el, prevIterator, newIterator ) {\n\t\tvar name = $el.attr( 'name' ); // get current name\n\n\t\t// If name is defined\n\t\tif ( 'undefined' !== typeof name ) {\n\t\t\tvar isFileList = $el.attr( 'id' ).indexOf('filelist');\n\n\t\t\t// Update field name attributes so data is not orphaned when a row is removed and post is saved\n\t\t\tvar from    = isFileList ? '[' + prevIterator + '][' : '[' + prevIterator + ']';\n\t\t\tvar to      = isFileList ? '[' + newIterator + '][' : '[' + newIterator + ']';\n\t\t\tvar newName = name.replace( from, to );\n\n\t\t\t// New name with replaced iterator\n\t\t\t$el.attr( 'name', newName );\n\t\t}\n\t};\n\n\tcmb.emptyValue = function( evt, row ) {\n\t\t$( cmb.noEmpty, row ).val( '' );\n\t};\n\n\tcmb.setDefaults = function( evt, row ) {\n\t\t$( cmb.noEmpty, row ).each( function() {\n\t\t\tvar $el = $(this);\n\t\t\tvar defVal = cmb.getFieldArg( $el, 'default' );\n\t\t\tif ( 'undefined' !== typeof defVal && false !== defVal ) {\n\t\t\t\t$el.val( defVal );\n\t\t\t}\n\t\t});\n\t};\n\n\tcmb.addGroupRow = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $this = $( this );\n\n\t\t// before anything significant happens\n\t\tcmb.triggerElement( $this, 'cmb2_add_group_row_start', $this );\n\n\t\tvar $table   = $id( $this.data('selector') );\n\t\tvar $oldRow  = $table.find('.cmb-repeatable-grouping').last();\n\t\tvar prevNum  = parseInt( $oldRow.data('iterator'), 10 );\n\t\tcmb.idNumber = parseInt( prevNum, 10 ) + 1;\n\t\tvar $row     = $oldRow.clone();\n\t\tvar nodeName = $row.prop('nodeName') || 'div';\n\n\t\t// Make sure the next number doesn't exist.\n\t\twhile ( $table.find( '.cmb-repeatable-grouping[data-iterator=\"'+ cmb.idNumber +'\"]' ).length > 0 ) {\n\t\t\tcmb.idNumber++;\n\t\t}\n\n\t\tcmb.newRowHousekeeping( $row.data( 'title', $this.data( 'grouptitle' ) ) ).cleanRow( $row, prevNum, true );\n\t\t$row.find( '.cmb-add-row-button' ).prop( 'disabled', false );\n\n\t\tvar $newRow = $( '<' + nodeName + ' id=\"'+ getRowId( $oldRow.attr('id'), cmb.idNumber ) +'\" class=\"postbox cmb-row cmb-repeatable-grouping\" data-iterator=\"'+ cmb.idNumber +'\">'+ $row.html() +'</' + nodeName + '>' );\n\t\t$oldRow.after( $newRow );\n\n\t\tcmb.afterRowInsert( $newRow );\n\t\tcmb.makeRepeatableSortable( $newRow );\n\n\t\tcmb.triggerElement( $table, { type: 'cmb2_add_row', group: true }, $newRow );\n\t};\n\n\tcmb.addAjaxRow = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $this     = $( this );\n\t\tvar $table    = $id( $this.data('selector') );\n\t\tvar $row      = $table.find('.empty-row');\n\t\tvar prevNum   = parseInt( $row.find('[data-iterator]').data('iterator'), 10 );\n\t\tcmb.idNumber  = parseInt( prevNum, 10 ) + 1;\n\t\tvar $emptyrow = $row.clone();\n\n\t\tcmb.newRowHousekeeping( $emptyrow ).cleanRow( $emptyrow, prevNum );\n\n\t\t$row.removeClass('empty-row hidden').addClass('cmb-repeat-row');\n\t\t$row.after( $emptyrow );\n\n\t\tcmb.afterRowInsert( $emptyrow );\n\n\t\tcmb.triggerElement( $table, { type: 'cmb2_add_row', group: false }, $emptyrow, $row );\n\t};\n\n\tcmb.removeGroupRow = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $this        = $( this );\n\t\tvar confirmation = $this.data('confirm');\n\n\t\t// Process further only if deletion confirmation enabled and user agreed.\n\t\tif ( ! cmb.resetRow.resetting && confirmation && ! window.confirm( confirmation ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $table  = $id( $this.data('selector') );\n\t\tvar $parent = $this.parents('.cmb-repeatable-grouping');\n\t\tvar number  = $table.find('.cmb-repeatable-grouping').length;\n\n\t\tif ( number < 2 ) {\n\t\t\treturn cmb.resetRow( $parent.parents('.cmb-repeatable-group').find( '.cmb-add-group-row' ), $this );\n\t\t}\n\n\t\tcmb.triggerElement( $table, 'cmb2_remove_group_row_start', $this );\n\n\t\t$parent.remove();\n\n\t\tcmb.triggerElement( $table, { type: 'cmb2_remove_row', group: true } );\n\t};\n\n\tcmb.removeAjaxRow = function( evt ) {\n\t\tevt.preventDefault();\n\n\t\tvar $this = $( this );\n\n\t\t// Check if disabled\n\t\tif ( $this.hasClass( 'button-disabled' ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar $parent = $this.parents('.cmb-row');\n\t\tvar $table  = $this.parents('.cmb-repeat-table');\n\t\tvar number  = $table.find('.cmb-row').length;\n\n\t\tif ( number <= 2 ) {\n\t\t\treturn cmb.resetRow( $parent.find( '.cmb-add-row-button' ), $this );\n\t\t}\n\n\t\tif ( $parent.hasClass('empty-row') ) {\n\t\t\t$parent.prev().addClass( 'empty-row' ).removeClass('cmb-repeat-row');\n\t\t}\n\n\t\t$this.parents('.cmb-repeat-table .cmb-row').remove();\n\n\n\t\tcmb.triggerElement( $table, { type: 'cmb2_remove_row', group: false } );\n\t};\n\n\tcmb.resetRow = function( $addNewBtn, $removeBtn ) {\n\t\tcmb.resetRow.resetting = true;\n\t\t// Click the \"add new\" button followed by the \"remove this\" button\n\t\t// in order to reset the repeat row to empty values.\n\t\t$addNewBtn.trigger( 'click' );\n\t\t$removeBtn.trigger( 'click' );\n\t\tcmb.resetRow.resetting = false;\n\t};\n\n\tcmb.shiftRows = function( evt ) {\n\n\t\tevt.preventDefault();\n\n\t\tvar $this  = $( this );\n\t\tvar moveUp = $this.hasClass( 'move-up' ) ? true : false;\n\t\tvar $from  = $this.parents( '.cmb-repeatable-grouping' );\n\t\tvar $goto  = $from[ moveUp ? 'prev' : 'next' ]( '.cmb-repeatable-grouping' );\n\n\t\t// Before shift occurs.\n\t\tcmb.triggerElement( $this, 'cmb2_shift_rows_enter', $this, $from, $goto );\n\n\t\tif ( ! $goto.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// About to shift\n\t\tcmb.triggerElement( $this, 'cmb2_shift_rows_start', $this, $from, $goto );\n\n\t\tvar fromIterator = $from.attr('data-iterator');\n\t\tvar toIterator   = $goto.attr('data-iterator');\n\n\t\t// Replace name attributes in both groups.\n\t\t$from.attr( 'data-iterator', toIterator ).find( cmb.repeatEls ).each( function() {\n\t\t\tcmb.updateNameAttr( $( this ), fromIterator, toIterator );\n\t\t});\n\t\t$goto.attr( 'data-iterator', fromIterator ).find( cmb.repeatEls ).each( function() {\n\t\t\tcmb.updateNameAttr( $( this ), toIterator, fromIterator );\n\t\t});\n\n\t\t// Replace titles in both groups.\n\t\tvar groupTitle = $this.parents( '.cmb-repeatable-group' ).find('[data-grouptitle]').data( 'grouptitle' );\n\t\tif ( groupTitle ) {\n\t\t\tcmb.resetGroupTitles( $from, toIterator, groupTitle );\n\t\t\tcmb.resetGroupTitles( $goto, fromIterator, groupTitle );\n\t\t}\n\n\t\t// Now move the group to it's destination.\n\t\t$goto[moveUp ? 'before' : 'after']( $from );\n\n\t\t// Scroll to the top of the shifted group.\n\t\t$([document.documentElement, document.body]).animate({\n\t\t\tscrollTop: $from.offset().top - 50\n\t\t}, 300);\n\n\t\t// shift done\n\t\tcmb.triggerElement( $this, 'cmb2_shift_rows_complete', $this, $from, $goto );\n\t};\n\n\tcmb.initPickers = function( $timePickers, $datePickers, $colorPickers ) {\n\t\tcmb.trigger( 'cmb_init_pickers', {\n\t\t\ttime: $timePickers,\n\t\t\tdate: $datePickers,\n\t\t\tcolor: $colorPickers\n\t\t} );\n\n\t\t// Initialize jQuery UI timepickers\n\t\tcmb.initDateTimePickers( $timePickers, 'timepicker', 'time_picker' );\n\t\t// Initialize jQuery UI datepickers\n\t\tcmb.initDateTimePickers( $datePickers, 'datepicker', 'date_picker' );\n\t\t// Initialize color picker\n\t\tcmb.initColorPickers( $colorPickers );\n\t};\n\n\tcmb.initDateTimePickers = function( $selector, method, defaultKey ) {\n\t\tif ( $selector.length ) {\n\t\t\t$selector[ method ]( 'destroy' ).each( function() {\n\t\t\t\tvar $this     = $( this );\n\t\t\t\tvar fieldOpts = $this.data( method ) || {};\n\t\t\t\tvar options   = $.extend( {}, cmb.defaults[ defaultKey ], fieldOpts );\n\t\t\t\t$this[ method ]( cmb.datePickerSetupOpts( fieldOpts, options, method ) );\n\t\t\t} );\n\t\t}\n\t};\n\n\tcmb.datePickerSetupOpts = function( fieldOpts, options, method ) {\n\t\tvar existing = $.extend( {}, options );\n\n\t\toptions.beforeShow = function( input, inst ) {\n\t\t\tif ( 'timepicker' === method ) {\n\t\t\t\tcmb.addTimePickerClasses( inst.dpDiv );\n\t\t\t}\n\n\t\t\t// Wrap datepicker w/ class to narrow the scope of jQuery UI CSS and prevent conflicts\n\t\t\t$id( 'ui-datepicker-div' ).addClass( 'cmb2-element' );\n\n\t\t\t// Let's be sure to call beforeShow if it was added\n\t\t\tif ( 'function' === typeof existing.beforeShow ) {\n\t\t\t\texisting.beforeShow( input, inst );\n\t\t\t}\n\t\t};\n\n\t\tif ( 'timepicker' === method ) {\n\t\t\toptions.onChangeMonthYear = function( year, month, inst, picker ) {\n\t\t\t\tcmb.addTimePickerClasses( inst.dpDiv );\n\n\t\t\t\t// Let's be sure to call onChangeMonthYear if it was added\n\t\t\t\tif ( 'function' === typeof existing.onChangeMonthYear ) {\n\t\t\t\t\texisting.onChangeMonthYear( year, month, inst, picker );\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\toptions.onClose = function( dateText, inst ) {\n\t\t\t// Remove the class when we're done with it (and hide to remove FOUC).\n\t\t\tvar $picker = $id( 'ui-datepicker-div' ).removeClass( 'cmb2-element' ).hide();\n\t\t\tif ( 'timepicker' === method && ! $( inst.input ).val() ) {\n\t\t\t\t// Set the timepicker field value if it's empty.\n\t\t\t\tinst.input.val( $picker.find( '.ui_tpicker_time' ).text() );\n\t\t\t}\n\n\t\t\t// Let's be sure to call onClose if it was added\n\t\t\tif ( 'function' === typeof existing.onClose ) {\n\t\t\t\texisting.onClose( dateText, inst );\n\t\t\t}\n\t\t};\n\n\t\treturn options;\n\t};\n\n\t// Adds classes to timepicker buttons.\n\tcmb.addTimePickerClasses = function( $picker ) {\n\t\tvar func = cmb.addTimePickerClasses;\n\t\tfunc.count = func.count || 0;\n\n\t\t// Wait a bit to let the timepicker render, since these are pre-render events.\n\t\tsetTimeout( function() {\n\t\t\tif ( $picker.find( '.ui-priority-secondary' ).length ) {\n\t\t\t\t$picker.find( '.ui-priority-secondary' ).addClass( 'button-secondary' );\n\t\t\t\t$picker.find( '.ui-priority-primary' ).addClass( 'button-primary' );\n\t\t\t\tfunc.count = 0;\n\t\t\t} else if ( func.count < 5 ) {\n\t\t\t\tfunc.count++;\n\t\t\t\tfunc( $picker );\n\t\t\t}\n\t\t}, 10 );\n\t};\n\n\tcmb.initColorPickers = function( $selector ) {\n\t\tif ( ! $selector.length ) {\n\t\t\treturn;\n\t\t}\n\t\tif ( 'object' === typeof jQuery.wp && 'function' === typeof jQuery.wp.wpColorPicker ) {\n\n\t\t\t$selector.each( function() {\n\t\t\t\tvar $this = $( this );\n\t\t\t\tvar fieldOpts = $this.data( 'colorpicker' ) || {};\n\t\t\t\t$this.wpColorPicker( $.extend( {}, cmb.defaults.color_picker, fieldOpts ) );\n\t\t\t} );\n\n\t\t} else {\n\t\t\t$selector.each( function( i ) {\n\t\t\t\t$( this ).after( '<div id=\"picker-' + i + '\" style=\"z-index: 1000; background: #EEE; border: 1px solid #CCC; position: absolute; display: block;\"></div>' );\n\t\t\t\t$id( 'picker-' + i ).hide().farbtastic( $( this ) );\n\t\t\t} )\n\t\t\t.focus( function() {\n\t\t\t\t$( this ).next().show();\n\t\t\t} )\n\t\t\t.blur( function() {\n\t\t\t\t$( this ).next().hide();\n\t\t\t} );\n\t\t}\n\t};\n\n\tcmb.initCodeEditors = function( $selector ) {\n\t\tcmb.trigger( 'cmb_init_code_editors', $selector );\n\n\t\tif ( ! cmb.defaults.code_editor || ! wp || ! wp.codeEditor || ! $selector.length ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$selector.each( function() {\n\t\t\twp.codeEditor.initialize(\n\t\t\t\tthis.id,\n\t\t\t\tcmb.codeEditorArgs( $( this ).data( 'codeeditor' ) )\n\t\t\t);\n\t\t} );\n\t};\n\n\tcmb.codeEditorArgs = function( overrides ) {\n\t\tvar props = [ 'codemirror', 'csslint', 'jshint', 'htmlhint' ];\n\t\tvar args = $.extend( {}, cmb.defaults.code_editor );\n\t\toverrides = overrides || {};\n\n\t\tfor ( var i = props.length - 1; i >= 0; i-- ) {\n\t\t\tif ( overrides.hasOwnProperty( props[i] ) ) {\n\t\t\t\targs[ props[i] ] = $.extend( {}, args[ props[i] ] || {}, overrides[ props[i] ] );\n\t\t\t}\n\t\t}\n\n\t\treturn args;\n\t};\n\n\tcmb.makeListSortable = function() {\n\t\tvar $filelist = cmb.metabox().find( '.cmb2-media-status.cmb-attach-list' );\n\t\tif ( $filelist.length ) {\n\t\t\t$filelist.sortable({ cursor: 'move' }).disableSelection();\n\t\t}\n\t};\n\n\tcmb.makeRepeatableSortable = function( $row ) {\n\t\tvar $repeatables = ($row || cmb.metabox()).find( '.cmb-repeat-table .cmb-field-list' );\n\n\t\tif ( $repeatables.length ) {\n\t\t\t$repeatables.sortable({\n\t\t\t\titems : '.cmb-repeat-row',\n\t\t\t\tcursor: 'move',\n\t\t\t\t// The default \"cancel\" attributes are: \"input,textarea,button,select,option\".\n\t\t\t\t// We are appending .CodeMirror.\n\t\t\t\t// See https://api.jqueryui.com/sortable/#option-cancel\n\t\t\t\tcancel: 'input,textarea,button,select,option,.CodeMirror'\n\t\t\t});\n\t\t}\n\t};\n\n\tcmb.maybeOembed = function( evt ) {\n\t\tvar $this = $( this );\n\n\t\tvar m = {\n\t\t\tfocusout : function() {\n\t\t\t\tsetTimeout( function() {\n\t\t\t\t\t// if it's been 2 seconds, hide our spinner\n\t\t\t\t\tcmb.spinner( '.cmb2-metabox', true );\n\t\t\t\t}, 2000);\n\t\t\t},\n\t\t\tkeyup : function() {\n\t\t\t\tvar betw = function( min, max ) {\n\t\t\t\t\treturn ( evt.which <= max && evt.which >= min );\n\t\t\t\t};\n\t\t\t\t// Only Ajax on normal keystrokes\n\t\t\t\tif ( betw( 48, 90 ) || betw( 96, 111 ) || betw( 8, 9 ) || evt.which === 187 || evt.which === 190 ) {\n\t\t\t\t\t// fire our ajax function\n\t\t\t\t\tcmb.doAjax( $this, evt );\n\t\t\t\t}\n\t\t\t},\n\t\t\tpaste : function() {\n\t\t\t\t// paste event is fired before the value is filled, so wait a bit\n\t\t\t\tsetTimeout( function() { cmb.doAjax( $this ); }, 100);\n\t\t\t}\n\t\t};\n\n\t\tm[ evt.type ]();\n\t};\n\n\t/**\n\t * Resize oEmbed videos to fit in their respective metaboxes\n\t *\n\t * @since  0.9.4\n\t *\n\t * @return {return}\n\t */\n\tcmb.resizeoEmbeds = function() {\n\t\tcmb.metabox().each( function() {\n\t\t\tvar $this      = $( this );\n\t\t\tvar $tableWrap = $this.parents('.inside');\n\t\t\tvar isSide     = $this.parents('.inner-sidebar').length || $this.parents( '#side-sortables' ).length;\n\t\t\tvar isSmall    = isSide;\n\t\t\tvar isSmallest = false;\n\t\t\tif ( ! $tableWrap.length )  {\n\t\t\t\treturn true; // continue\n\t\t\t}\n\n\t\t\t// Calculate new width\n\t\t\tvar tableW = $tableWrap.width();\n\n\t\t\tif ( cmb.styleBreakPoint > tableW ) {\n\t\t\t\tisSmall    = true;\n\t\t\t\tisSmallest = ( cmb.styleBreakPoint - 62 ) > tableW;\n\t\t\t}\n\n\t\t\ttableW = isSmall ? tableW : Math.round(($tableWrap.width() * 0.82)*0.97);\n\t\t\tvar newWidth = tableW - 30;\n\t\t\tif ( isSmall && ! isSide && ! isSmallest ) {\n\t\t\t\tnewWidth = newWidth - 75;\n\t\t\t}\n\t\t\tif ( newWidth > 639 ) {\n\t\t\t\treturn true; // continue\n\t\t\t}\n\n\t\t\tvar $embeds   = $this.find('.cmb-type-oembed .embed-status');\n\t\t\tvar $children = $embeds.children().not('.cmb2-remove-wrapper');\n\t\t\tif ( ! $children.length ) {\n\t\t\t\treturn true; // continue\n\t\t\t}\n\n\t\t\t$children.each( function() {\n\t\t\t\tvar $this     = $( this );\n\t\t\t\tvar iwidth    = $this.width();\n\t\t\t\tvar iheight   = $this.height();\n\t\t\t\tvar _newWidth = newWidth;\n\t\t\t\tif ( $this.parents( '.cmb-repeat-row' ).length && ! isSmall ) {\n\t\t\t\t\t// Make room for our repeatable \"remove\" button column\n\t\t\t\t\t_newWidth = newWidth - 91;\n\t\t\t\t\t_newWidth = 785 > tableW ? _newWidth - 15 : _newWidth;\n\t\t\t\t}\n\t\t\t\t// Calc new height\n\t\t\t\tvar newHeight = Math.round((_newWidth * iheight)/iwidth);\n\t\t\t\t$this.width(_newWidth).height(newHeight);\n\t\t\t});\n\t\t});\n\t};\n\n\t// function for running our ajax\n\tcmb.doAjax = function( $obj ) {\n\t\t// get typed value\n\t\tvar oembed_url = $obj.val();\n\t\t// only proceed if the field contains more than 6 characters\n\t\tif ( oembed_url.length < 6 ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// get field id\n\t\tvar field_id         = $obj.attr('id');\n\t\tvar $context         = $obj.closest( '.cmb-td' );\n\t\tvar $embed_container = $context.find( '.embed-status' );\n\t\tvar $embed_wrap      = $context.find( '.embed_wrap' );\n\t\tvar $child_el        = $embed_container.find( ':first-child' );\n\t\tvar oembed_width     = $embed_container.length && $child_el.length ? $child_el.width() : $obj.width();\n\n\t\tcmb.log( 'oembed_url', oembed_url, field_id );\n\n\t\t// show our spinner\n\t\tcmb.spinner( $context );\n\t\t// clear out previous results\n\t\t$embed_wrap.html('');\n\t\t// and run our ajax function\n\t\tsetTimeout( function() {\n\t\t\t// if they haven't typed in 500 ms\n\t\t\tif ( $( '.cmb2-oembed:focus' ).val() !== oembed_url ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$.ajax({\n\t\t\t\ttype : 'post',\n\t\t\t\tdataType : 'json',\n\t\t\t\turl : l10n.ajaxurl,\n\t\t\t\tdata : {\n\t\t\t\t\t'action'          : 'cmb2_oembed_handler',\n\t\t\t\t\t'oembed_url'      : oembed_url,\n\t\t\t\t\t'oembed_width'    : oembed_width > 300 ? oembed_width : 300,\n\t\t\t\t\t'field_id'        : field_id,\n\t\t\t\t\t'object_id'       : $obj.data( 'objectid' ),\n\t\t\t\t\t'object_type'     : $obj.data( 'objecttype' ),\n\t\t\t\t\t'cmb2_ajax_nonce' : l10n.ajax_nonce\n\t\t\t\t},\n\t\t\t\tsuccess: function(response) {\n\t\t\t\t\tcmb.log( response );\n\t\t\t\t\t// hide our spinner\n\t\t\t\t\tcmb.spinner( $context, true );\n\t\t\t\t\t// and populate our results from ajax response\n\t\t\t\t\t$embed_wrap.html( response.data );\n\t\t\t\t}\n\t\t\t});\n\n\t\t}, 500);\n\n\t};\n\n\t/**\n\t * Gets jQuery object containing all CMB metaboxes. Caches the result.\n\t *\n\t * @since  1.0.2\n\t *\n\t * @return {Object} jQuery object containing all CMB metaboxes.\n\t */\n\tcmb.metabox = function() {\n\t\tif ( cmb.$metabox ) {\n\t\t\treturn cmb.$metabox;\n\t\t}\n\t\tcmb.$metabox = $('.cmb2-wrap > .cmb2-metabox');\n\t\treturn cmb.$metabox;\n\t};\n\n\t/**\n\t * Starts/stops contextual spinner.\n\t *\n\t * @since  1.0.1\n\t *\n\t * @param  {object} $context The jQuery parent/context object.\n\t * @param  {bool} hide       Whether to hide the spinner (will show by default).\n\t *\n\t * @return {void}\n\t */\n\tcmb.spinner = function( $context, hide ) {\n\t\tvar m = hide ? 'removeClass' : 'addClass';\n\t\t$('.cmb-spinner', $context )[ m ]( 'is-active' );\n\t};\n\n\t/**\n\t * Triggers a jQuery event on the document object.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  {string} evtName The name of the event to trigger.\n\t *\n\t * @return {void}\n\t */\n\tcmb.trigger = function( evtName ) {\n\t\tvar args = Array.prototype.slice.call( arguments, 1 );\n\t\targs.push( cmb );\n\t\t$document.trigger( evtName, args );\n\t};\n\n\t/**\n\t * Triggers a jQuery event on the given jQuery object.\n\t *\n\t * @since  2.2.3\n\t *\n\t * @param  {object} $el     The jQuery element object.\n\t * @param  {string} evtName The name of the event to trigger.\n\t *\n\t * @return {void}\n\t */\n\tcmb.triggerElement = function( $el, evtName ) {\n\t\tvar args = Array.prototype.slice.call( arguments, 2 );\n\t\targs.push( cmb );\n\t\t$el.trigger( evtName, args );\n\t};\n\n\t/**\n\t * Get an argument for a given field.\n\t *\n\t * @since  2.5.0\n\t *\n\t * @param  {string|object} hash The field hash, id, or a jQuery object for a field.\n\t * @param  {string}        arg  The argument to get on the field.\n\t *\n\t * @return {mixed}              The argument value.\n\t */\n\tcmb.getFieldArg = function( hash, arg ) {\n\t\treturn cmb.getField( hash )[ arg ];\n\t};\n\n\t/**\n\t * Get a field object instances. Can be filtered by passing in a filter callback function.\n\t * e.g. `const fileFields = CMB2.getFields(f => 'file' === f.type);`\n\t *\n\t * @since  2.5.0\n\t *\n\t * @param  {mixed} filterCb An optional filter callback function.\n\t *\n\t * @return array            An array of field object instances.\n\t */\n\tcmb.getFields = function( filterCb ) {\n\t\tif ( 'function' === typeof filterCb ) {\n\t\t\tvar fields = [];\n\t\t\t$.each( l10n.fields, function( hash, field ) {\n\t\t\t\tif ( filterCb( field, hash ) ) {\n\t\t\t\t\tfields.push( field );\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn fields;\n\t\t}\n\n\t\treturn l10n.fields;\n\t};\n\n\t/**\n\t * Get a field object instance by hash or id.\n\t *\n\t * @since  2.5.0\n\t *\n\t * @param  {string|object} hash The field hash, id, or a jQuery object for a field.\n\t *\n\t * @return {object}        The field object or an empty object.\n\t */\n\tcmb.getField = function( hash ) {\n\t\tvar field = {};\n\t\thash = hash instanceof jQuery ? hash.data( 'hash' ) : hash;\n\t\tif ( hash ) {\n\t\t\ttry {\n\t\t\t\tif ( l10n.fields[ hash ] ) {\n\t\t\t\t\tthrow new Error( hash );\n\t\t\t\t}\n\n\t\t\t\tcmb.getFields( function( field ) {\n\t\t\t\t\tif ( 'function' === typeof hash ) {\n\t\t\t\t\t\tif ( hash( field ) ) {\n\t\t\t\t\t\t\tthrow new Error( field.hash );\n\t\t\t\t\t\t}\n\t\t\t\t\t} else  if ( field.id && field.id === hash ) {\n\t\t\t\t\t\tthrow new Error( field.hash );\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} catch( e ) {\n\t\t\t\tfield = l10n.fields[ e.message ];\n\t\t\t}\n\t\t}\n\n\t\treturn field;\n\t};\n\n\t/**\n\t * Safely log things if query var is set. Accepts same parameters as console.log.\n\t *\n\t * @since  1.0.0\n\t *\n\t * @return {void}\n\t */\n\tcmb.log = function() {\n\t\tif ( l10n.script_debug && console && 'function' === typeof console.log ) {\n\t\t\tconsole.log.apply(console, arguments);\n\t\t}\n\t};\n\n\t/**\n\t * Replace the last occurrence of a string.\n\t *\n\t * @since  2.2.6\n\t *\n\t * @param  {string} string  String to search/replace.\n\t * @param  {string} search  String to search.\n\t * @param  {string} replace String to replace search with.\n\t *\n\t * @return {string}         Possibly modified string.\n\t */\n\tcmb.replaceLast = function( string, search, replace ) {\n\t\t// find the index of last time word was used\n\t\tvar n = string.lastIndexOf( search );\n\n\t\t// slice the string in 2, one from the start to the lastIndexOf\n\t\t// and then replace the word in the rest\n\t\treturn string.slice( 0, n ) + string.slice( n ).replace( search, replace );\n\t};\n\n\t// Kick it off!\n\t$( cmb.init );\n\n})(window, document, jQuery, window.CMB2);\n"]}