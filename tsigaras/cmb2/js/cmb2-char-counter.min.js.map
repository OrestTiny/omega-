{"version":3,"sources":["cmb2/js/cmb2-char-counter.js"],"names":["window","CMB2","charcounter","cmb","counter","wp","utils","WordCounter","counters","wpCounter","updateCounter","field_id","hasOwnProperty","instance","text","editor","isHidden","getContent","format","$id","val","trim","count","type","exceeded","max","$el","parents","outerWidth","String","length","instantiate","data","fieldId","counterType","initAll","$","each","this","evt","id","on","countWysiwyg","addRow","$this","$row","attr","replace","remove","getElementById","push","_","throttle","element","currentTarget","countTextarea","document","initWysiwyg","cleanCounters","jQuery"],"mappings":"aACAA,OAAAC,KAAAD,OAAAC,MAAA,GACAD,OAAAC,KAAAC,YAAAF,OAAAC,KAAAC,aAAA,GAEAF,SAAWA,EAACE,EAAcF,EAAMG,EAAKC,GAKpC,IAAOC,GAAGC,QAAWD,GAAGC,MAAMC,YAA9B,OAASJ,EAACG,IAAK,yBAKfF,EADAI,SAAA,GAEA,IADAJ,EAAgBA,EAAKI,SACrBC,EAAmBL,IAAOC,GAACG,MAAQD,YAWpCH,EAAAM,cAAA,SAAAC,GAGE,IADAH,EAAAI,eAAAD,GAEC,OADMH,KAIP,IAAAK,EAAYL,EAAWG,GAIvBG,EAHWD,EAAYE,SAAaF,EAASE,OAAOC,WAG3BH,EAASE,OAAOE,WAAY,CAAAC,OAAA,QAAAf,EAAAgB,IAAAR,GAAAS,MAAAC,OAAEH,EAAQT,EAAAa,MAAAR,EAAAD,EAAAU,MAASC,EAAYb,EAAUc,KAAOJ,EAAMR,EAAAY,IAKvGL,EAAWP,EAASY,IAAMZ,EAASY,IAAMH,EAAQA,EAQrD,OALAT,EAASa,IAAIC,QAAS,2BAA6BH,EAAW,WAAa,eAAiB,qBAG5FX,EAASa,IAAIN,IAAKA,GAAMQ,WAAgB,EAAIC,OAAQT,GAAMU,OAAW,GAAO,MAA5EjB,GAKDT,EAAO2B,YAAY,SAAGL,GACrB,IAAAM,EAAQN,EAAGA,OAGX,KAASM,EAAKC,WAAWzB,GAAa,CAErC,IAAIK,EACS,CAAZa,IACSM,EAATP,IACIO,EAAKP,IAATF,KACAR,UAASiB,EAAAE,YAAA,QAAA,8BAATnB,QACA,GAEDP,EAEAwB,EAAAC,SAAApB,EAGDT,EAAAM,cAAAsB,EAAAC,WAWD7B,EAGI+B,QAAA,WAGJC,EAAC,sBAAAC,KAAA,WAFCjC,EAAQ2B,YAAaK,EAAGE,UAc1BlC,EAIMW,YAAaP,SAAW+B,EAAAxB,GAK5BA,EAAAyB,MAAAhC,IAGDA,EAAAO,EAAAyB,IAAAzB,OAAAA,GAGF0B,GAAA,mBAAArC,EAAAsC,eASCtC,EAOEuC,OAAeC,SAAYL,EAAMM,GAJlCA,EAQCzC,KAAO,sBAAqBiC,KAAA,WAL5B,IAAIO,EAAWR,EAAGE,MAUrB3B,EADCiC,EAAAE,KAAA,MACDC,QAAA,iBAAA,IACAH,EAAAE,KAAA,gBAAAnC,GAAAqB,KAAA,WAAArB,GAEAP,EAAA2B,YAAAa,MAICxC,EAOG4C,cAAarC,WANf,IAOCA,EAAAqC,EAAA,GAJD,IAOArC,KAAAH,EAEG6B,EAAYY,eAAYtC,IANzBqC,EAOAE,KAAO1C,GAKVwC,EAAAlB,QACDqB,EAAAd,KAAAW,EAAA,SAAArC,UACAH,EAAAG,MAOCP,EAQMmC,aAAI3B,EAAcwC,SAAE,SAAoBb,GAI9C,OAAGA,EAAA3B,eAAA,WARMR,EAAQM,cAAe0B,EAAGG,EAAIc,SAAUrB,KAAM,OAaxDO,EAAA3B,eAAA,iBACAR,EAAAM,cAAA0B,EAAAG,EAAAe,eAAAtB,KAAA,YADA,IAMC5B,EAAQmD,cAAgBJ,EAAEC,SAAU,SAASb,GAC5CnC,EAAQM,cAAe6B,EAAIe,cAAcd,KACvC,KAGHJ,EAAGoB,GACDf,GAAI,WAAYrC,EAAQ+B,SACxBM,GAAI,sBAAuBrC,EAAQqD,aACnChB,GAAI,eAAgBrC,EAAQuC,QAC5BF,GAAI,kBAAmBrC,EAAQsD,eAC/BjB,GAAI,cAAe,oBAAqBrC,EAAQmD,eA5MnDvD,CA8MKA,OAAQwD,SAAUG,OAAQ3D,OAAOC,KAAMD,OAAOC,KAAKC","file":"cmb2-char-counter.min.js","sourcesContent":["/**\n * Used for character counters\n */\nwindow.CMB2 = window.CMB2 || {};\nwindow.CMB2.charcounter = window.CMB2.charcounter || {};\n\n( function(window, document, $, cmb, counter ) {\n\t'use strict';\n\n\tif ( ! wp.utils || ! wp.utils.WordCounter ) {\n\t\treturn cmb.log( 'Cannot find wp.utils!' );\n\t}\n\n\t// Private variables\n\tcounter.counters = {};\n\tvar counters     = counter.counters;\n\tvar wpCounter    = new wp.utils.WordCounter();\n\n\t/**\n\t * Update a field's character counter\n\t *\n\t * @since  2.7.0\n\t *\n\t * @param {string} field_id\n\t *\n\t * @return {int}\n\t */\n\tcounter.updateCounter = function( field_id ) {\n\t\t// No counter?\n\t\tif ( ! counters.hasOwnProperty( field_id ) ) {\n\t\t\treturn null;\n\t\t}\n\n\t\tvar instance = counters[ field_id ];\n\t\tvar wysiwyg  = instance.editor && ! instance.editor.isHidden();\n\n\t\t// Are we dealing with WYSIWYG visual editor, or textarea / WYSIWYG textarea?\n\t\tvar text     = wysiwyg ? instance.editor.getContent( { format: 'raw' } ) : cmb.$id( field_id ).val().trim();\n\t\tvar count    = wpCounter.count( text, instance.type );\n\t\tvar exceeded = instance.max && count > instance.max;\n\n\t\t// Number remaining when max is defined\n\t\tvar val      = instance.max ? instance.max - count : count;\n\n\t\t// Over maximum?\n\t\tinstance.$el.parents( '.cmb2-char-counter-wrap' )[ exceeded ? 'addClass' : 'removeClass' ]( 'cmb2-max-exceeded' );\n\n\t\t// Update counter, and update counter input width.\n\t\tinstance.$el.val( val ).outerWidth( ( ( 8 * String( val ).length ) + 15 ) + 'px' );\n\n\t\treturn count;\n\t};\n\n\tcounter.instantiate = function( $el ) {\n\t\tvar data = $el.data();\n\n\t\t// Add counter details if not already done\n\t\tif ( ! ( data.fieldId in counters ) ) {\n\n\t\t\tvar instance = {\n\t\t\t\t$el    : $el,\n\t\t\t\tmax    : data.max,\n\t\t\t\ttype   : 'words' === data.counterType ? 'words' : 'characters_including_spaces',\n\t\t\t\teditor : false,\n\t\t\t};\n\n\t\t\tcounters[ data.fieldId ] = instance;\n\n\t\t\t// Initialise counter\n\t\t\tcounter.updateCounter( data.fieldId );\n\t\t}\n\t};\n\n\t/**\n\t * Initializes all character counters. Hooked to cmb_init.\n\t *\n\t * @since  2.7.0\n\t *\n\t * @param {bool} init First init?\n\t *\n\t * @return {void}\n\t */\n\tcounter.initAll = function() {\n\n\t\t// Gather counters and initialise\n\t\t$( '.cmb2-char-counter' ).each( function() {\n\t\t\tcounter.instantiate( $( this ) );\n\t\t});\n\t};\n\n\t/**\n\t * Initializes WYSIWYG editors. Hooked to tinymce-editor-init\n\t *\n\t * @since  2.7.0\n\t *\n\t * @param {object} evt\n\t * @param {object} editor\n\t *\n\t * @return {void}\n\t */\n\tcounter.initWysiwyg = function( evt, editor ) {\n\n\t\t// Check if it's one of our WYSIWYGs\n\t\t// Should have already been registered in counters via hidden textarea\n\t\tif ( editor.id in counters ) {\n\n\t\t\t// Add editor to counter\n\t\t\tcounters[ editor.id ].editor = editor;\n\n\t\t\t// Add nodechange event\n\t\t\teditor.on( 'nodechange keyup', counter.countWysiwyg );\n\t\t}\n\t};\n\n\t/**\n\t * Initializes after a new repeatable row has been added. Hooked to cmb2_add_row\n\t *\n\t * @since  2.7.0\n\t *\n\t * @param  {object} evt A jQuery-normalized event object.\n\t * @param  {object} $row A jQuery dom element object for the group row.\n\t *\n\t * @return {void}\n\t */\n\tcounter.addRow = function( evt, $row ) {\n\n\t\t// Character counters in row?\n\t\t$row.find( '.cmb2-char-counter' ).each( function() {\n\n\t\t\t// Update attributes\n\t\t\tvar $this    = $( this );\n\t\t\tvar id       = $this.attr( 'id' );\n\t\t\tvar field_id = id.replace( /^char-counter-/, '' );\n\t\t\t$this.attr( 'data-field-id', field_id ).data( 'field-id', field_id );\n\n\t\t\tcounter.instantiate( $this );\n\t\t});\n\t};\n\n\t/**\n\t * Clean the counters array.\n\t * Removes counters after a repeatable row has been removed. Hooked to cmb2_remove_row.\n\t *\n\t * @since  2.7.0\n\t *\n\t * @return {void}\n\t */\n\tcounter.cleanCounters = function() {\n\t\tvar field_id, remove = [];\n\n\t\t// Got through counters\n\t\tfor ( field_id in counters ) {\n\t\t\t// Check for element, gather for removal\n\t\t\tif ( ! document.getElementById( field_id ) ) {\n\t\t\t\tremove.push( field_id );\n\t\t\t}\n\t\t}\n\n\t\t// Anything to remove?\n\t\tif ( remove.length ) {\n\t\t\t_.each( remove, function( field_id ) {\n\t\t\t\tdelete counters[ field_id ];\n\t\t\t});\n\t\t}\n\t};\n\n\t/**\n\t * Counts the value of wysiwyg on the keyup event.\n\t *\n\t * @since  2.7.0\n\t *\n\t * @param  {object} evt\n\t *\n\t * @return {void}\n\t */\n\tcounter.countWysiwyg = _.throttle( function( evt ) {\n\n\t\t// Init event\n\t\tif ( evt.hasOwnProperty( 'element' ) ) {\n\t\t\treturn counter.updateCounter( $( evt.element ).data( 'id' ) );\n\t\t}\n\n\t\t// Nodechange event\n\t\tif ( evt.hasOwnProperty( 'currentTarget' ) ) {\n\t\t\treturn counter.updateCounter( $( evt.currentTarget ).data( 'id' ) );\n\t\t}\n\n\t} );\n\n\t/**\n\t * Counts the value of textarea on the keyup event.\n\t *\n\t * @since  2.7.0\n\t *\n\t * @param  {object} evt\n\t *\n\t * @return {void}\n\t */\n\tcounter.countTextarea = _.throttle( function(evt) {\n\t\tcounter.updateCounter( evt.currentTarget.id );\n\t}, 400 );\n\n\t// Hook in our event callbacks.\n\t$( document )\n\t\t.on( 'cmb_init', counter.initAll )\n\t\t.on( 'tinymce-editor-init', counter.initWysiwyg )\n\t\t.on( 'cmb2_add_row', counter.addRow )\n\t\t.on( 'cmb2_remove_row', counter.cleanCounters )\n\t\t.on( 'input keyup', '.cmb2-count-chars', counter.countTextarea );\n\n} )( window, document, jQuery, window.CMB2, window.CMB2.charcounter );\n"]}